{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "@casper124578/eslint-config",
    "@casper124578/eslint-config-react",
    "@casper124578/eslint-config-next"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "project": "./tsconfig.base.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-redundant-type-constituents": "off",
    "@typescript-eslint/no-unused-vars": "off"
  },
  "overrides": [
    {
      "files": ["packages/api/**"],
      "rules": {
        "no-restricted-globals": [
          "error",
          {
            "name": "Buffer",
            "message": "Import Buffer from `node:buffer` instead"
          },
          {
            "name": "process",
            "message": "Import process from `node:process` instead"
          },
          {
            "name": "setTimeout",
            "message": "Import setTimeout from `node:timers` instead"
          },
          {
            "name": "setInterval",
            "message": "Import setInterval from `node:timers` instead"
          },
          {
            "name": "setImmediate",
            "message": "Import setImmediate from `node:timers` instead"
          },
          {
            "name": "clearTimeout",
            "message": "Import clearTimeout from `node:timers` instead"
          },
          {
            "name": "clearInterval",
            "message": "Import clearInterval from `node:timers` instead"
          }
        ]
      }
    }
  ]
}
